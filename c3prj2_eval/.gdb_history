p result
b
del break 25
i b
s
fin
s
fin
fin
fin
fin
s
fin
fin
fin
fin
fin
s
fin
fin
fin
c
si
s
p *cp1.value
p cp1.value
run
c
p d->cards[i]
p d->cards[0]
s
c
p result
display result
c
p d
p d->cards[i]
p *d->cards[i]
display *d->cards[i]
c
s
q
rbreak cards.c:.
rbreak deck.c:.
rbreak eval.c:.
run
p result.value
c
c
c
p *d->cards[i]
display *d->cards[i]
s
c
c
c
c
s
fin
s
fin
fin
s
s
s
fin
s
p cp1
q
b copy_straight
run
s
display to_ind
s
c
run
run
s
b
c
i b
del break 2
run
b 182
c
display ind
c
p from->n_cards
c
p from->cards
p *from->cards
p *from->cards[0]
p *from->cards[1]
p *from->cards[2]
p *from->cards[3]
p *from->cards[4]
p *from->cards[5]
p *from->cards[6]
q
q
q
b is_straight_at
run
s
p hand->cards[i]
p *hand->cards[i]
p *hand->cards[0]
p *hand->cards[1]
p *hand->cards[2]
p *hand->cards[3]
p *hand->cards[4]
p *hand->cards[5]
s
q
b is_straight_at
run
s
s
run
s
p c1
p c2
s
q
b copy_straight
run
b 182
c
display ind
p from->n_cards
c
b is_straight_at
run
s
c
s
run
c
s
p index
p n
q
b find_secondary_pair
run
s
p match_counts
p hand->n_cards
p *match_counts@5
s
p *match_counts@5
p u
p i
p match_count[2]
p match_counts[2]
q
b find_secondary_pair
run
q
b is_straight_at
run
s
q
b is_straight_at
run
s
p *hand->cards@5
p (*hand->cards)@5
p **hand->cards@5
p *hand->cards[0]
p *hand->cards[1]
p *hand->cards[2]
p *hand->cards[3]
p *hand->cards[4]
p *hand->cards[5]
s
p *c1
p c1
p c2
q
b compare_hands
run
s
fin
s
fin
s
fin
s
fin
p h1
p h2
s
s
s
p res
s
q
b find_secondary_pair
run
p match_idx
s
run
p hand->n_cards
p match_idx
q
b is_straight_at
run
s
fin
s
p c1
p c2
s
q
run
q
b is_straight_at
run
s
fin
s
p c1
p c2
s
q
b is_straight_at
run
s
fin
s
run
s
fin
s
p hand->cards[0]->value
p hand->cards[1]->value
p index
p n
q
b is_straight_at
run
s
fin
s
p hand->cards[0]->value
p hand->cards[i]->value
p hand->cards[i+1]->value
s
p hand->cards[i]->value
p hand->cards[i+1]->value
p hand->cards[i]->value != hand->cards[i + 1]->value + 1
p hand->cards[i]->value
p hand->cards[i + 1]->value + 1
p hand->cards[i]->suit
p hand->cards[i+1]->suit
q
