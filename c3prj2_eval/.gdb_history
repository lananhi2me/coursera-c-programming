p cp1
p *cp1
q
b card_ptr_comp
run
si
si
s
p cp1
p *cp1
b compare_hand
b compare_hands
run
b qsort
run
s
fin
c
c
c
b
list b
i b
del b 4
del break 4
i b
del break 3
run
run
start
s
fin
s
p hand
fin
s
fin
fin
s
fin
s
fin
fin
rbreak eval.c:.
run
s
p cp1
p cp1->value
p *cp1
c
s
p *hand
p hand
p hand->cards
p hand->cards[0]
p *hand->cards[0]
p *hand->cards[1]
p *hand->cards[2]
p *hand->cards[3]
p *hand->cards[4]
p *hand->cards[5]
run
s
d *cp1
p 
d cp1->value
display cp1->value
display cp2->value
p $6317280
p 6317280
 6317280

x 6317280
x 6317312
q
b card_ptr_comp
run
s
p cp1
p cp1.value
p *cp1.value
q
rbreak cards.c:.
rbreak deck.c:.
rbreak eval.c:.
run
s
fin
s
fin
fin
s
fin
p d
p d->cards
p d->cards[0]
p *d->cards[0]
s
fin
fin
s
p result
b
del break 25
i b
s
fin
s
fin
fin
fin
fin
s
fin
fin
fin
fin
fin
s
fin
fin
fin
c
si
s
p *cp1.value
p cp1.value
run
c
p d->cards[i]
p d->cards[0]
s
c
p result
display result
c
p d
p d->cards[i]
p *d->cards[i]
display *d->cards[i]
c
s
q
rbreak cards.c:.
rbreak deck.c:.
rbreak eval.c:.
run
p result.value
c
c
c
p *d->cards[i]
display *d->cards[i]
s
c
c
c
c
s
fin
s
fin
fin
s
s
s
fin
s
p cp1
q
b copy_straight
run
s
display to_ind
s
c
run
run
s
b
c
i b
del break 2
run
b 182
c
display ind
c
p from->n_cards
c
p from->cards
p *from->cards
p *from->cards[0]
p *from->cards[1]
p *from->cards[2]
p *from->cards[3]
p *from->cards[4]
p *from->cards[5]
p *from->cards[6]
q
q
q
b is_straight_at
run
s
p hand->cards[i]
p *hand->cards[i]
p *hand->cards[0]
p *hand->cards[1]
p *hand->cards[2]
p *hand->cards[3]
p *hand->cards[4]
p *hand->cards[5]
s
q
b is_straight_at
run
s
s
run
s
p c1
p c2
s
q
b copy_straight
run
b 182
c
display ind
p from->n_cards
c
b is_straight_at
run
s
c
s
run
c
s
p index
p n
q
b find_secondary_pair
run
s
p match_counts
p hand->n_cards
p *match_counts@5
s
p *match_counts@5
p u
p i
p match_count[2]
p match_counts[2]
q
