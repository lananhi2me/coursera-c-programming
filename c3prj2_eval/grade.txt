Grading at Sun Nov 18 13:29:20 UTC 2018
Compiling your code
rm test-eval deck.o eval.o cards.o #poker
Makefile:12: recipe for target 'clean' failed
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==200== Memcheck, a memory error detector
==200== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==200== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==200== Command: ./test-eval inp.2.txt
==200== Parent PID: 199
==200== 
==200== Invalid read of size 8
==200==    at 0x4018F8: is_n_length_straight_at (eval.c:84)
==200==    by 0x401A30: is_ace_low_straight_at (eval.c:113)
==200==    by 0x401864: is_straight_at (eval.c:70)
==200==    by 0x40276D: describe_hand (test-eval.c:49)
==200==    by 0x402B33: main (test-eval.c:119)
==200==  Address 0x52092c0 is 0 bytes after a block of size 48 alloc'd
==200==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==200==    by 0x40116D: add_card_to (deck-c4.c:29)
==200==    by 0x40336D: hand_from_string (input.c:49)
==200==    by 0x402AAD: main (test-eval.c:111)
==200== 
==200== Invalid read of size 8
==200==    at 0x4018FB: is_n_length_straight_at (eval.c:84)
==200==    by 0x401A30: is_ace_low_straight_at (eval.c:113)
==200==    by 0x401864: is_straight_at (eval.c:70)
==200==    by 0x40276D: describe_hand (test-eval.c:49)
==200==    by 0x402B33: main (test-eval.c:119)
==200==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==200== 
==200== 
==200== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==200==  Access not within mapped region at address 0x0
==200==    at 0x4018FB: is_n_length_straight_at (eval.c:84)
==200==    by 0x401A30: is_ace_low_straight_at (eval.c:113)
==200==    by 0x401864: is_straight_at (eval.c:70)
==200==    by 0x40276D: describe_hand (test-eval.c:49)
==200==    by 0x402B33: main (test-eval.c:119)
==200==  If you believe this happened as a result of a stack
==200==  overflow in your program's main thread (unlikely but
==200==  possible), you can try to increase the size of the
==200==  main thread stack using the --main-stacksize= flag.
==200==  The main thread stack size used in this run was 8388608.
==200== 
==200== HEAP SUMMARY:
==200==     in use at exit: 896 bytes in 18 blocks
==200==   total heap usage: 144 allocs, 126 frees, 11,396 bytes allocated
==200== 
==200== LEAK SUMMARY:
==200==    definitely lost: 0 bytes in 0 blocks
==200==    indirectly lost: 0 bytes in 0 blocks
==200==      possibly lost: 0 bytes in 0 blocks
==200==    still reachable: 896 bytes in 18 blocks
==200==         suppressed: 0 bytes in 0 blocks
==200== Rerun with --leak-check=full to see details of leaked memory
==200== 
==200== For counts of detected and suppressed errors, rerun with: -v
==200== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 4: Trying hands with 3 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 5: Trying hands with straights
Valgrind returned an error status
==229== Memcheck, a memory error detector
==229== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==229== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==229== Command: ./test-eval inp.5.txt
==229== Parent PID: 228
==229== 
==229== Invalid read of size 8
==229==    at 0x4018F8: is_n_length_straight_at (eval.c:84)
==229==    by 0x401A30: is_ace_low_straight_at (eval.c:113)
==229==    by 0x401864: is_straight_at (eval.c:70)
==229==    by 0x40276D: describe_hand (test-eval.c:49)
==229==    by 0x402B13: main (test-eval.c:116)
==229==  Address 0x520a518 is 0 bytes after a block of size 56 alloc'd
==229==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==229==    by 0x40116D: add_card_to (deck-c4.c:29)
==229==    by 0x40336D: hand_from_string (input.c:49)
==229==    by 0x402A98: main (test-eval.c:110)
==229== 
==229== Invalid read of size 8
==229==    at 0x4018FB: is_n_length_straight_at (eval.c:84)
==229==    by 0x401A30: is_ace_low_straight_at (eval.c:113)
==229==    by 0x401864: is_straight_at (eval.c:70)
==229==    by 0x40276D: describe_hand (test-eval.c:49)
==229==    by 0x402B13: main (test-eval.c:116)
==229==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==229== 
==229== 
==229== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==229==  Access not within mapped region at address 0x0
==229==    at 0x4018FB: is_n_length_straight_at (eval.c:84)
==229==    by 0x401A30: is_ace_low_straight_at (eval.c:113)
==229==    by 0x401864: is_straight_at (eval.c:70)
==229==    by 0x40276D: describe_hand (test-eval.c:49)
==229==    by 0x402B13: main (test-eval.c:116)
==229==  If you believe this happened as a result of a stack
==229==  overflow in your program's main thread (unlikely but
==229==  possible), you can try to increase the size of the
==229==  main thread stack using the --main-stacksize= flag.
==229==  The main thread stack size used in this run was 8388608.
==229== 
==229== HEAP SUMMARY:
==229==     in use at exit: 928 bytes in 20 blocks
==229==   total heap usage: 208 allocs, 188 frees, 12,768 bytes allocated
==229== 
==229== LEAK SUMMARY:
==229==    definitely lost: 0 bytes in 0 blocks
==229==    indirectly lost: 0 bytes in 0 blocks
==229==      possibly lost: 0 bytes in 0 blocks
==229==    still reachable: 928 bytes in 20 blocks
==229==         suppressed: 0 bytes in 0 blocks
==229== Rerun with --leak-check=full to see details of leaked memory
==229== 
==229== For counts of detected and suppressed errors, rerun with: -v
==229== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==234== Memcheck, a memory error detector
==234== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==234== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==234== Command: ./test-eval inp.6.txt
==234== Parent PID: 233
==234== 
==234== Invalid read of size 8
==234==    at 0x4018F8: is_n_length_straight_at (eval.c:84)
==234==    by 0x401A30: is_ace_low_straight_at (eval.c:113)
==234==    by 0x401864: is_straight_at (eval.c:70)
==234==    by 0x402736: describe_hand (test-eval.c:46)
==234==    by 0x402B33: main (test-eval.c:119)
==234==  Address 0x5216600 is 0 bytes after a block of size 48 alloc'd
==234==    at 0x4C2FD5F: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==234==    by 0x40116D: add_card_to (deck-c4.c:29)
==234==    by 0x40336D: hand_from_string (input.c:49)
==234==    by 0x402AAD: main (test-eval.c:111)
==234== 
==234== Invalid read of size 8
==234==    at 0x4018FB: is_n_length_straight_at (eval.c:84)
==234==    by 0x401A30: is_ace_low_straight_at (eval.c:113)
==234==    by 0x401864: is_straight_at (eval.c:70)
==234==    by 0x402736: describe_hand (test-eval.c:46)
==234==    by 0x402B33: main (test-eval.c:119)
==234==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==234== 
==234== 
==234== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==234==  Access not within mapped region at address 0x0
==234==    at 0x4018FB: is_n_length_straight_at (eval.c:84)
==234==    by 0x401A30: is_ace_low_straight_at (eval.c:113)
==234==    by 0x401864: is_straight_at (eval.c:70)
==234==    by 0x402736: describe_hand (test-eval.c:46)
==234==    by 0x402B33: main (test-eval.c:119)
==234==  If you believe this happened as a result of a stack
==234==  overflow in your program's main thread (unlikely but
==234==  possible), you can try to increase the size of the
==234==  main thread stack using the --main-stacksize= flag.
==234==  The main thread stack size used in this run was 8388608.
==234== 
==234== HEAP SUMMARY:
==234==     in use at exit: 896 bytes in 18 blocks
==234==   total heap usage: 752 allocs, 734 frees, 23,080 bytes allocated
==234== 
==234== LEAK SUMMARY:
==234==    definitely lost: 0 bytes in 0 blocks
==234==    indirectly lost: 0 bytes in 0 blocks
==234==      possibly lost: 0 bytes in 0 blocks
==234==    still reachable: 896 bytes in 18 blocks
==234==         suppressed: 0 bytes in 0 blocks
==234== Rerun with --leak-check=full to see details of leaked memory
==234== 
==234== For counts of detected and suppressed errors, rerun with: -v
==234== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 8: Trying hands with 4 of a kind
 Checking the output 
Your file matched the expected output
 - Testcase passed
Testcase 9: Trying hands with straight flushes
 Checking the output 
Line_55_did_not_match
Line_63_did_not_match
Your file did not match the expected ouput
 - Output did not match, testcase failed
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 							Kh Qh Jh 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 9s 8s 						As Ks Qs Js 0s 9s 8s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Kh Qh Jh 0h 9h 8h 7h 						Kh Qh Jh 0h 9h 8h 7h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - Straight flush at index 2					 - Straight flush at index 2
 - The most of a kind is 1 of a kind (at index 0 / value K)	 - The most of a kind is 1 of a kind (at index 0 / value K)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ac As Kc Ks Qs Js 0s 						Ac As Kc Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight at index 0					      <
 - Straight flush at index 1				      <
 - The most of a kind is 2 of a kind (at index 0 / value A)	 - The most of a kind is 2 of a kind (at index 0 / value A)
 - Secondary pair at index 2 (value K)				 - Secondary pair at index 2 (value K)
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
Ad Kh Qh Jh Js 0h 9h 						Ad Kh Qh Jh Js 0h 9h 
 - Flush in suit h						 - Flush in suit h
 - Straight at index 0					      <
 - Straight flush at index 1				      <
 - The most of a kind is 2 of a kind (at index 3 / value J)	 - The most of a kind is 2 of a kind (at index 3 / value J)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH		      |	 - evaluate_hand's ranking: FLUSH
 - 5 cards used for hand: Kh Qh Jh 0h 9h 			 - 5 cards used for hand: Kh Qh Jh 0h 9h 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Hand 1:								Hand 1:
--------							--------
Ah Kc 5h 4h 3h 2h 						Ah Kc 5h 4h 3h 2h 
 - Flush in suit h						 - Flush in suit h
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5h 4h 3h 2h Ah 			 - 5 cards used for hand: 5h 4h 3h 2h Ah 
Hand 2:								Hand 2:
--------							--------
Ac 6c 5c 4c 3c 2c 						Ac 6c 5c 4c 3c 2c 
 - Flush in suit c						 - Flush in suit c
 - Straight flush at index 0					 - Straight flush at index 0
 - Straight flush at index 1					 - Straight flush at index 1
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5c 4c 3c 2c Ac 			 - 5 cards used for hand: 5c 4c 3c 2c Ac 
Comparison : 							Comparison : 
--------------							--------------
Tie								Tie
============================					============================
Hand 1:								Hand 1:
--------							--------
As Ks Qs Js 0s 							As Ks Qs Js 0s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: As Ks Qs Js 0s 			 - 5 cards used for hand: As Ks Qs Js 0s 
Hand 2:								Hand 2:
--------							--------
As 5s 4s 3s 2s 							As 5s 4s 3s 2s 
 - Flush in suit s						 - Flush in suit s
 - Straight flush at index 0					 - Straight flush at index 0
 - The most of a kind is 1 of a kind (at index 0 / value A)	 - The most of a kind is 1 of a kind (at index 0 / value A)
 - No secondary pair						 - No secondary pair
 - evaluate_hand's ranking: STRAIGHT_FLUSH			 - evaluate_hand's ranking: STRAIGHT_FLUSH
 - 5 cards used for hand: 5s 4s 3s 2s As 			 - 5 cards used for hand: 5s 4s 3s 2s As 
Comparison : 							Comparison : 
--------------							--------------
Hand 1 wins!							Hand 1 wins!
============================					============================
Testcase 10: Trying each type of hand ranking
 Checking the output 
Your file matched the expected output
 - Testcase passed

Overall Grade: D
