Grading at Sun Nov 18 06:12:28 UTC 2018
Compiling your code
rm test-eval deck.o eval.o cards.o #poker
Makefile:10: recipe for target 'clean' failed
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==562== Memcheck, a memory error detector
==562== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==562== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==562== Command: ./test-eval inp.1.txt
==562== Parent PID: 561
==562== 
==562== Conditional jump or move depends on uninitialised value(s)
==562==    at 0x401639: flush_suit (eval.c:29)
==562==    by 0x40266C: describe_hand (test-eval.c:36)
==562==    by 0x402AC4: main (test-eval.c:116)
==562== 
==562== Conditional jump or move depends on uninitialised value(s)
==562==    at 0x40267A: describe_hand (test-eval.c:37)
==562==    by 0x402AC4: main (test-eval.c:116)
==562== 
==562== Conditional jump or move depends on uninitialised value(s)
==562==    at 0x402DB4: suit_letter (cards.c:69)
==562==    by 0x4026A4: describe_hand (test-eval.c:43)
==562==    by 0x402AC4: main (test-eval.c:116)
==562== 
==562== Conditional jump or move depends on uninitialised value(s)
==562==    at 0x402DC3: suit_letter (cards.c:72)
==562==    by 0x4026A4: describe_hand (test-eval.c:43)
==562==    by 0x402AC4: main (test-eval.c:116)
==562== 
==562== Conditional jump or move depends on uninitialised value(s)
==562==    at 0x402DD2: suit_letter (cards.c:75)
==562==    by 0x4026A4: describe_hand (test-eval.c:43)
==562==    by 0x402AC4: main (test-eval.c:116)
==562== 
==562== Conditional jump or move depends on uninitialised value(s)
==562==    at 0x402DE1: suit_letter (cards.c:78)
==562==    by 0x4026A4: describe_hand (test-eval.c:43)
==562==    by 0x402AC4: main (test-eval.c:116)
==562== 
==562== 
==562== HEAP SUMMARY:
==562==     in use at exit: 896 bytes in 18 blocks
==562==   total heap usage: 30 allocs, 12 frees, 9,328 bytes allocated
==562== 
==562== LEAK SUMMARY:
==562==    definitely lost: 0 bytes in 0 blocks
==562==    indirectly lost: 0 bytes in 0 blocks
==562==      possibly lost: 0 bytes in 0 blocks
==562==    still reachable: 896 bytes in 18 blocks
==562==         suppressed: 0 bytes in 0 blocks
==562== Rerun with --leak-check=full to see details of leaked memory
==562== 
==562== For counts of detected and suppressed errors, rerun with: -v
==562== Use --track-origins=yes to see where uninitialised values come from
==562== ERROR SUMMARY: 7 errors from 6 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==567== Memcheck, a memory error detector
==567== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==567== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==567== Command: ./test-eval inp.2.txt
==567== Parent PID: 566
==567== 
==567== Conditional jump or move depends on uninitialised value(s)
==567==    at 0x401639: flush_suit (eval.c:29)
==567==    by 0x40266C: describe_hand (test-eval.c:36)
==567==    by 0x402AC4: main (test-eval.c:116)
==567== 
==567== Conditional jump or move depends on uninitialised value(s)
==567==    at 0x40267A: describe_hand (test-eval.c:37)
==567==    by 0x402AC4: main (test-eval.c:116)
==567== 
==567== Conditional jump or move depends on uninitialised value(s)
==567==    at 0x402DB4: suit_letter (cards.c:69)
==567==    by 0x4026A4: describe_hand (test-eval.c:43)
==567==    by 0x402AC4: main (test-eval.c:116)
==567== 
==567== Conditional jump or move depends on uninitialised value(s)
==567==    at 0x402DC3: suit_letter (cards.c:72)
==567==    by 0x4026A4: describe_hand (test-eval.c:43)
==567==    by 0x402AC4: main (test-eval.c:116)
==567== 
==567== Conditional jump or move depends on uninitialised value(s)
==567==    at 0x402DD2: suit_letter (cards.c:75)
==567==    by 0x4026A4: describe_hand (test-eval.c:43)
==567==    by 0x402AC4: main (test-eval.c:116)
==567== 
==567== Conditional jump or move depends on uninitialised value(s)
==567==    at 0x402DE1: suit_letter (cards.c:78)
==567==    by 0x4026A4: describe_hand (test-eval.c:43)
==567==    by 0x402AC4: main (test-eval.c:116)
==567== 
==567== 
==567== HEAP SUMMARY:
==567==     in use at exit: 880 bytes in 17 blocks
==567==   total heap usage: 28 allocs, 11 frees, 9,272 bytes allocated
==567== 
==567== LEAK SUMMARY:
==567==    definitely lost: 0 bytes in 0 blocks
==567==    indirectly lost: 0 bytes in 0 blocks
==567==      possibly lost: 0 bytes in 0 blocks
==567==    still reachable: 880 bytes in 17 blocks
==567==         suppressed: 0 bytes in 0 blocks
==567== Rerun with --leak-check=full to see details of leaked memory
==567== 
==567== For counts of detected and suppressed errors, rerun with: -v
==567== Use --track-origins=yes to see where uninitialised values come from
==567== ERROR SUMMARY: 8 errors from 6 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
Valgrind returned an error status
==572== Memcheck, a memory error detector
==572== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==572== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==572== Command: ./test-eval inp.3.txt
==572== Parent PID: 571
==572== 
==572== Conditional jump or move depends on uninitialised value(s)
==572==    at 0x401639: flush_suit (eval.c:29)
==572==    by 0x40266C: describe_hand (test-eval.c:36)
==572==    by 0x402AC4: main (test-eval.c:116)
==572== 
==572== Conditional jump or move depends on uninitialised value(s)
==572==    at 0x40267A: describe_hand (test-eval.c:37)
==572==    by 0x402AC4: main (test-eval.c:116)
==572== 
==572== Conditional jump or move depends on uninitialised value(s)
==572==    at 0x402DB4: suit_letter (cards.c:69)
==572==    by 0x4026A4: describe_hand (test-eval.c:43)
==572==    by 0x402AC4: main (test-eval.c:116)
==572== 
==572== Conditional jump or move depends on uninitialised value(s)
==572==    at 0x402DC3: suit_letter (cards.c:72)
==572==    by 0x4026A4: describe_hand (test-eval.c:43)
==572==    by 0x402AC4: main (test-eval.c:116)
==572== 
==572== Conditional jump or move depends on uninitialised value(s)
==572==    at 0x402DD2: suit_letter (cards.c:75)
==572==    by 0x4026A4: describe_hand (test-eval.c:43)
==572==    by 0x402AC4: main (test-eval.c:116)
==572== 
==572== Conditional jump or move depends on uninitialised value(s)
==572==    at 0x402DE1: suit_letter (cards.c:78)
==572==    by 0x4026A4: describe_hand (test-eval.c:43)
==572==    by 0x402AC4: main (test-eval.c:116)
==572== 
==572== 
==572== HEAP SUMMARY:
==572==     in use at exit: 864 bytes in 16 blocks
==572==   total heap usage: 26 allocs, 10 frees, 9,216 bytes allocated
==572== 
==572== LEAK SUMMARY:
==572==    definitely lost: 0 bytes in 0 blocks
==572==    indirectly lost: 0 bytes in 0 blocks
==572==      possibly lost: 0 bytes in 0 blocks
==572==    still reachable: 864 bytes in 16 blocks
==572==         suppressed: 0 bytes in 0 blocks
==572== Rerun with --leak-check=full to see details of leaked memory
==572== 
==572== For counts of detected and suppressed errors, rerun with: -v
==572== Use --track-origins=yes to see where uninitialised values come from
==572== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==577== Memcheck, a memory error detector
==577== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==577== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==577== Command: ./test-eval inp.4.txt
==577== Parent PID: 576
==577== 
==577== Conditional jump or move depends on uninitialised value(s)
==577==    at 0x401639: flush_suit (eval.c:29)
==577==    by 0x40266C: describe_hand (test-eval.c:36)
==577==    by 0x402AC4: main (test-eval.c:116)
==577== 
==577== Conditional jump or move depends on uninitialised value(s)
==577==    at 0x40267A: describe_hand (test-eval.c:37)
==577==    by 0x402AC4: main (test-eval.c:116)
==577== 
==577== Conditional jump or move depends on uninitialised value(s)
==577==    at 0x402DB4: suit_letter (cards.c:69)
==577==    by 0x4026A4: describe_hand (test-eval.c:43)
==577==    by 0x402AC4: main (test-eval.c:116)
==577== 
==577== Conditional jump or move depends on uninitialised value(s)
==577==    at 0x402DC3: suit_letter (cards.c:72)
==577==    by 0x4026A4: describe_hand (test-eval.c:43)
==577==    by 0x402AC4: main (test-eval.c:116)
==577== 
==577== Conditional jump or move depends on uninitialised value(s)
==577==    at 0x402DD2: suit_letter (cards.c:75)
==577==    by 0x4026A4: describe_hand (test-eval.c:43)
==577==    by 0x402AC4: main (test-eval.c:116)
==577== 
==577== Conditional jump or move depends on uninitialised value(s)
==577==    at 0x402DE1: suit_letter (cards.c:78)
==577==    by 0x4026A4: describe_hand (test-eval.c:43)
==577==    by 0x402AC4: main (test-eval.c:116)
==577== 
==577== 
==577== HEAP SUMMARY:
==577==     in use at exit: 896 bytes in 18 blocks
==577==   total heap usage: 30 allocs, 12 frees, 9,328 bytes allocated
==577== 
==577== LEAK SUMMARY:
==577==    definitely lost: 0 bytes in 0 blocks
==577==    indirectly lost: 0 bytes in 0 blocks
==577==      possibly lost: 0 bytes in 0 blocks
==577==    still reachable: 896 bytes in 18 blocks
==577==         suppressed: 0 bytes in 0 blocks
==577== Rerun with --leak-check=full to see details of leaked memory
==577== 
==577== For counts of detected and suppressed errors, rerun with: -v
==577== Use --track-origins=yes to see where uninitialised values come from
==577== ERROR SUMMARY: 8 errors from 6 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
Valgrind returned an error status
==582== Memcheck, a memory error detector
==582== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==582== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==582== Command: ./test-eval inp.5.txt
==582== Parent PID: 581
==582== 
==582== Conditional jump or move depends on uninitialised value(s)
==582==    at 0x401639: flush_suit (eval.c:29)
==582==    by 0x40266C: describe_hand (test-eval.c:36)
==582==    by 0x402AC4: main (test-eval.c:116)
==582== 
==582== Conditional jump or move depends on uninitialised value(s)
==582==    at 0x40267A: describe_hand (test-eval.c:37)
==582==    by 0x402AC4: main (test-eval.c:116)
==582== 
==582== Conditional jump or move depends on uninitialised value(s)
==582==    at 0x402DB4: suit_letter (cards.c:69)
==582==    by 0x4026A4: describe_hand (test-eval.c:43)
==582==    by 0x402AC4: main (test-eval.c:116)
==582== 
==582== Conditional jump or move depends on uninitialised value(s)
==582==    at 0x402DC3: suit_letter (cards.c:72)
==582==    by 0x4026A4: describe_hand (test-eval.c:43)
==582==    by 0x402AC4: main (test-eval.c:116)
==582== 
==582== Conditional jump or move depends on uninitialised value(s)
==582==    at 0x402DD2: suit_letter (cards.c:75)
==582==    by 0x4026A4: describe_hand (test-eval.c:43)
==582==    by 0x402AC4: main (test-eval.c:116)
==582== 
==582== Conditional jump or move depends on uninitialised value(s)
==582==    at 0x402DE1: suit_letter (cards.c:78)
==582==    by 0x4026A4: describe_hand (test-eval.c:43)
==582==    by 0x402AC4: main (test-eval.c:116)
==582== 
==582== 
==582== HEAP SUMMARY:
==582==     in use at exit: 864 bytes in 16 blocks
==582==   total heap usage: 26 allocs, 10 frees, 9,216 bytes allocated
==582== 
==582== LEAK SUMMARY:
==582==    definitely lost: 0 bytes in 0 blocks
==582==    indirectly lost: 0 bytes in 0 blocks
==582==      possibly lost: 0 bytes in 0 blocks
==582==    still reachable: 864 bytes in 16 blocks
==582==         suppressed: 0 bytes in 0 blocks
==582== Rerun with --leak-check=full to see details of leaked memory
==582== 
==582== For counts of detected and suppressed errors, rerun with: -v
==582== Use --track-origins=yes to see where uninitialised values come from
==582== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==587== Memcheck, a memory error detector
==587== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==587== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==587== Command: ./test-eval inp.6.txt
==587== Parent PID: 586
==587== 
==587== Conditional jump or move depends on uninitialised value(s)
==587==    at 0x401639: flush_suit (eval.c:29)
==587==    by 0x40266C: describe_hand (test-eval.c:36)
==587==    by 0x402AC4: main (test-eval.c:116)
==587== 
==587== Conditional jump or move depends on uninitialised value(s)
==587==    at 0x40267A: describe_hand (test-eval.c:37)
==587==    by 0x402AC4: main (test-eval.c:116)
==587== 
==587== Conditional jump or move depends on uninitialised value(s)
==587==    at 0x402DB4: suit_letter (cards.c:69)
==587==    by 0x4026A4: describe_hand (test-eval.c:43)
==587==    by 0x402AC4: main (test-eval.c:116)
==587== 
==587== Conditional jump or move depends on uninitialised value(s)
==587==    at 0x402DC3: suit_letter (cards.c:72)
==587==    by 0x4026A4: describe_hand (test-eval.c:43)
==587==    by 0x402AC4: main (test-eval.c:116)
==587== 
==587== Conditional jump or move depends on uninitialised value(s)
==587==    at 0x402DD2: suit_letter (cards.c:75)
==587==    by 0x4026A4: describe_hand (test-eval.c:43)
==587==    by 0x402AC4: main (test-eval.c:116)
==587== 
==587== Conditional jump or move depends on uninitialised value(s)
==587==    at 0x402DE1: suit_letter (cards.c:78)
==587==    by 0x4026A4: describe_hand (test-eval.c:43)
==587==    by 0x402AC4: main (test-eval.c:116)
==587== 
==587== 
==587== HEAP SUMMARY:
==587==     in use at exit: 896 bytes in 18 blocks
==587==   total heap usage: 30 allocs, 12 frees, 9,328 bytes allocated
==587== 
==587== LEAK SUMMARY:
==587==    definitely lost: 0 bytes in 0 blocks
==587==    indirectly lost: 0 bytes in 0 blocks
==587==      possibly lost: 0 bytes in 0 blocks
==587==    still reachable: 896 bytes in 18 blocks
==587==         suppressed: 0 bytes in 0 blocks
==587== Rerun with --leak-check=full to see details of leaked memory
==587== 
==587== For counts of detected and suppressed errors, rerun with: -v
==587== Use --track-origins=yes to see where uninitialised values come from
==587== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==592== Memcheck, a memory error detector
==592== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==592== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==592== Command: ./test-eval inp.7.txt
==592== Parent PID: 591
==592== 
==592== Conditional jump or move depends on uninitialised value(s)
==592==    at 0x401639: flush_suit (eval.c:29)
==592==    by 0x40266C: describe_hand (test-eval.c:36)
==592==    by 0x402AC4: main (test-eval.c:116)
==592== 
==592== Conditional jump or move depends on uninitialised value(s)
==592==    at 0x40267A: describe_hand (test-eval.c:37)
==592==    by 0x402AC4: main (test-eval.c:116)
==592== 
==592== Conditional jump or move depends on uninitialised value(s)
==592==    at 0x402DB4: suit_letter (cards.c:69)
==592==    by 0x4026A4: describe_hand (test-eval.c:43)
==592==    by 0x402AC4: main (test-eval.c:116)
==592== 
==592== Conditional jump or move depends on uninitialised value(s)
==592==    at 0x402DC3: suit_letter (cards.c:72)
==592==    by 0x4026A4: describe_hand (test-eval.c:43)
==592==    by 0x402AC4: main (test-eval.c:116)
==592== 
==592== Conditional jump or move depends on uninitialised value(s)
==592==    at 0x402DD2: suit_letter (cards.c:75)
==592==    by 0x4026A4: describe_hand (test-eval.c:43)
==592==    by 0x402AC4: main (test-eval.c:116)
==592== 
==592== Conditional jump or move depends on uninitialised value(s)
==592==    at 0x402DE1: suit_letter (cards.c:78)
==592==    by 0x4026A4: describe_hand (test-eval.c:43)
==592==    by 0x402AC4: main (test-eval.c:116)
==592== 
==592== 
==592== HEAP SUMMARY:
==592==     in use at exit: 928 bytes in 20 blocks
==592==   total heap usage: 34 allocs, 14 frees, 9,456 bytes allocated
==592== 
==592== LEAK SUMMARY:
==592==    definitely lost: 0 bytes in 0 blocks
==592==    indirectly lost: 0 bytes in 0 blocks
==592==      possibly lost: 0 bytes in 0 blocks
==592==    still reachable: 928 bytes in 20 blocks
==592==         suppressed: 0 bytes in 0 blocks
==592== Rerun with --leak-check=full to see details of leaked memory
==592== 
==592== For counts of detected and suppressed errors, rerun with: -v
==592== Use --track-origins=yes to see where uninitialised values come from
==592== ERROR SUMMARY: 9 errors from 6 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==597== Memcheck, a memory error detector
==597== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==597== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==597== Command: ./test-eval inp.8.txt
==597== Parent PID: 596
==597== 
==597== Conditional jump or move depends on uninitialised value(s)
==597==    at 0x401639: flush_suit (eval.c:29)
==597==    by 0x40266C: describe_hand (test-eval.c:36)
==597==    by 0x402AC4: main (test-eval.c:116)
==597== 
==597== Conditional jump or move depends on uninitialised value(s)
==597==    at 0x40267A: describe_hand (test-eval.c:37)
==597==    by 0x402AC4: main (test-eval.c:116)
==597== 
==597== Conditional jump or move depends on uninitialised value(s)
==597==    at 0x402DB4: suit_letter (cards.c:69)
==597==    by 0x4026A4: describe_hand (test-eval.c:43)
==597==    by 0x402AC4: main (test-eval.c:116)
==597== 
==597== Conditional jump or move depends on uninitialised value(s)
==597==    at 0x402DC3: suit_letter (cards.c:72)
==597==    by 0x4026A4: describe_hand (test-eval.c:43)
==597==    by 0x402AC4: main (test-eval.c:116)
==597== 
==597== Conditional jump or move depends on uninitialised value(s)
==597==    at 0x402DD2: suit_letter (cards.c:75)
==597==    by 0x4026A4: describe_hand (test-eval.c:43)
==597==    by 0x402AC4: main (test-eval.c:116)
==597== 
==597== Conditional jump or move depends on uninitialised value(s)
==597==    at 0x402DE1: suit_letter (cards.c:78)
==597==    by 0x4026A4: describe_hand (test-eval.c:43)
==597==    by 0x402AC4: main (test-eval.c:116)
==597== 
==597== 
==597== HEAP SUMMARY:
==597==     in use at exit: 896 bytes in 18 blocks
==597==   total heap usage: 30 allocs, 12 frees, 9,328 bytes allocated
==597== 
==597== LEAK SUMMARY:
==597==    definitely lost: 0 bytes in 0 blocks
==597==    indirectly lost: 0 bytes in 0 blocks
==597==      possibly lost: 0 bytes in 0 blocks
==597==    still reachable: 896 bytes in 18 blocks
==597==         suppressed: 0 bytes in 0 blocks
==597== Rerun with --leak-check=full to see details of leaked memory
==597== 
==597== For counts of detected and suppressed errors, rerun with: -v
==597== Use --track-origins=yes to see where uninitialised values come from
==597== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
Valgrind returned an error status
==602== Memcheck, a memory error detector
==602== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==602== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==602== Command: ./test-eval inp.9.txt
==602== Parent PID: 601
==602== 
==602== Conditional jump or move depends on uninitialised value(s)
==602==    at 0x401639: flush_suit (eval.c:29)
==602==    by 0x40266C: describe_hand (test-eval.c:36)
==602==    by 0x402AC4: main (test-eval.c:116)
==602== 
==602== Conditional jump or move depends on uninitialised value(s)
==602==    at 0x40267A: describe_hand (test-eval.c:37)
==602==    by 0x402AC4: main (test-eval.c:116)
==602== 
==602== Conditional jump or move depends on uninitialised value(s)
==602==    at 0x402DB4: suit_letter (cards.c:69)
==602==    by 0x4026A4: describe_hand (test-eval.c:43)
==602==    by 0x402AC4: main (test-eval.c:116)
==602== 
==602== Conditional jump or move depends on uninitialised value(s)
==602==    at 0x402DC3: suit_letter (cards.c:72)
==602==    by 0x4026A4: describe_hand (test-eval.c:43)
==602==    by 0x402AC4: main (test-eval.c:116)
==602== 
==602== Conditional jump or move depends on uninitialised value(s)
==602==    at 0x402DD2: suit_letter (cards.c:75)
==602==    by 0x4026A4: describe_hand (test-eval.c:43)
==602==    by 0x402AC4: main (test-eval.c:116)
==602== 
==602== Conditional jump or move depends on uninitialised value(s)
==602==    at 0x402DE1: suit_letter (cards.c:78)
==602==    by 0x4026A4: describe_hand (test-eval.c:43)
==602==    by 0x402AC4: main (test-eval.c:116)
==602== 
==602== 
==602== HEAP SUMMARY:
==602==     in use at exit: 864 bytes in 16 blocks
==602==   total heap usage: 26 allocs, 10 frees, 9,216 bytes allocated
==602== 
==602== LEAK SUMMARY:
==602==    definitely lost: 0 bytes in 0 blocks
==602==    indirectly lost: 0 bytes in 0 blocks
==602==      possibly lost: 0 bytes in 0 blocks
==602==    still reachable: 864 bytes in 16 blocks
==602==         suppressed: 0 bytes in 0 blocks
==602== Rerun with --leak-check=full to see details of leaked memory
==602== 
==602== For counts of detected and suppressed errors, rerun with: -v
==602== Use --track-origins=yes to see where uninitialised values come from
==602== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)
Testcase 10: Trying each type of hand ranking
Valgrind returned an error status
==607== Memcheck, a memory error detector
==607== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==607== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==607== Command: ./test-eval inp.10.txt
==607== Parent PID: 606
==607== 
==607== Conditional jump or move depends on uninitialised value(s)
==607==    at 0x401639: flush_suit (eval.c:29)
==607==    by 0x40266C: describe_hand (test-eval.c:36)
==607==    by 0x402AC4: main (test-eval.c:116)
==607== 
==607== Conditional jump or move depends on uninitialised value(s)
==607==    at 0x40267A: describe_hand (test-eval.c:37)
==607==    by 0x402AC4: main (test-eval.c:116)
==607== 
==607== Conditional jump or move depends on uninitialised value(s)
==607==    at 0x402DB4: suit_letter (cards.c:69)
==607==    by 0x4026A4: describe_hand (test-eval.c:43)
==607==    by 0x402AC4: main (test-eval.c:116)
==607== 
==607== Conditional jump or move depends on uninitialised value(s)
==607==    at 0x402DC3: suit_letter (cards.c:72)
==607==    by 0x4026A4: describe_hand (test-eval.c:43)
==607==    by 0x402AC4: main (test-eval.c:116)
==607== 
==607== Conditional jump or move depends on uninitialised value(s)
==607==    at 0x402DD2: suit_letter (cards.c:75)
==607==    by 0x4026A4: describe_hand (test-eval.c:43)
==607==    by 0x402AC4: main (test-eval.c:116)
==607== 
==607== Conditional jump or move depends on uninitialised value(s)
==607==    at 0x402DE1: suit_letter (cards.c:78)
==607==    by 0x4026A4: describe_hand (test-eval.c:43)
==607==    by 0x402AC4: main (test-eval.c:116)
==607== 
==607== 
==607== HEAP SUMMARY:
==607==     in use at exit: 896 bytes in 18 blocks
==607==   total heap usage: 30 allocs, 12 frees, 9,328 bytes allocated
==607== 
==607== LEAK SUMMARY:
==607==    definitely lost: 0 bytes in 0 blocks
==607==    indirectly lost: 0 bytes in 0 blocks
==607==      possibly lost: 0 bytes in 0 blocks
==607==    still reachable: 896 bytes in 18 blocks
==607==         suppressed: 0 bytes in 0 blocks
==607== Rerun with --leak-check=full to see details of leaked memory
==607== 
==607== For counts of detected and suppressed errors, rerun with: -v
==607== Use --track-origins=yes to see where uninitialised values come from
==607== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)

Overall Grade: F
